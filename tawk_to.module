<?php
/**
 * @file
 * @package   tawk.to module for Backdrop CMS
 * @copyright (C) 2021 tawk.to
 * @license   GNU/GPLv3 http://www.gnu.org/licenses/gpl-3.0.html
 */

require_once 'tawk_to.widget.inc';
require_once 'tawk_to.admin.inc';
define('TAWK_TO_PAGE_ID', 'page_id');
define('TAWK_TO_WIDGET_ID', 'widget_id');
define('TAWK_TO_WIDGET_OPTIONS', 'widget_options');
define('TAWK_TO_WIDGET_USER_ID', 'widget_user_id');
define('TAWK_TO_CONFIG_NAME', 'tawk_to.settings');

/**
* Retrieves widget details from database.
*/
function tawk_to_get_widget() {
  return array(
    'page_id' => config_get(TAWK_TO_CONFIG_NAME, TAWK_TO_PAGE_ID),
    'widget_id' => config_get(TAWK_TO_CONFIG_NAME,TAWK_TO_WIDGET_ID),
  );
}

/**
* Implements hook_preprocess_page().
* Ensures widget appears on all defined pages
*/
function tawk_to_preprocess_page(&$variables) {
  global $base_url;

  // backend checking; do not show chat widget on admin page(s)
  if (path_is_admin(current_path())) {
    return;
  }

  $widget = tawk_to_get_widget();

  if ($widget['page_id'] === '' || $widget['widget_id'] === '') {
    return null;
  }

  $page_id = $widget['page_id'];
  $widget_id = $widget['widget_id'];

  // get visibility options
  $options = config_get(TAWK_TO_CONFIG_NAME, TAWK_TO_WIDGET_OPTIONS);
  $markupOptions = array(
    'enable_visitor_recognition' => true, // default value
  );

  if ($options) {
    $options = json_decode($options);

    if (isset($options->enable_visitor_recognition)) {
      $markupOptions['enable_visitor_recognition'] = $options->enable_visitor_recognition;
    }

    // prepare visibility
    $currentUrl = $base_url.$_SERVER['REQUEST_URI'];

    if (false==$options->always_display) {
      $showPages = json_decode($options->show_oncustom);
      $show = false;

      foreach ($showPages as $slug) {
        if ($currentUrl == $base_url.$slug) {
          $show = true;
          break;
        }
      }

      // taxonomy term pages
      if (arg(0) ==  'taxonomy' && arg(1) == 'term' && is_numeric(arg(2)) && arg(3) == '') {
        if (false != $options->show_ontaxonomy) {
          $show = true;
        }
      }

      // front page
      if (backdrop_is_front_page()) {
        if (false != $options->show_onfrontpage) {
          $show = true;
        }
      }

      if (!$show) {
        return;
      }
    }
    else {
      if (isset($options->hide_oncustom)) {
        $hide_pages = json_decode($options->hide_oncustom);
        $show = true;

        $currentUrl = (string) $currentUrl;
        foreach ($hide_pages as $slug) {
          // we need to add htmlspecialchars due to slashes added when saving to database
          $slug = (string) htmlspecialchars($slug);

          if ($currentUrl == $base_url.$slug) {
            $show = false;
            break;
          }
        }

        if (!$show) {
          return;
        }
      }
    }
  }

  $variables['page_bottom'] .= tawk_to_render_widget($page_id, $widget_id, $markupOptions);

  return $variables;
}

/**
* Hooks up configuration menu items and paths for ajax call endpoints.
*/
function tawk_to_menu() {
  $items = array();
  $items['admin/config/tawk'] = array(
    'title'            => 'tawk.to',
    'description'      => 'tawk.to configuration',
    'position'         => 'left',
    'weight'           => -100,
    'page callback'    => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file'             => 'system.admin.inc',
    'file path'        => backdrop_get_path('module', 'system'),
  );

  $items['admin/config/tawk/widget'] = array(
    'title'            => 'Widget',
    'description'      => 'Included tawk.to widget configuration',
    'page callback'    => 'tawk_to_admin_page',
    'access arguments' => array('administer site configuration'),
    'type'             => MENU_NORMAL_ITEM,
  );

  $items['admin/config/tawk/setwidget'] = array(
    'title'            => 'Set widget',
    'page callback'    => 'tawk_to_set_widget',
    'access arguments' => array('administer site configuration'),
    'type'             => MENU_CALLBACK,
  );

  $items['admin/config/tawk/removewidget'] = array(
    'title'            => 'Remove widget',
    'page callback'    => 'tawk_to_remove_widget',
    'access arguments' => array('administer site configuration'),
    'type'             => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements tawk.to module admin page
 */
function tawk_to_admin_page() {
  global $user;
  $sameUser = true;
  $value = config_get(TAWK_TO_CONFIG_NAME, TAWK_TO_WIDGET_USER_ID);

  if (!empty($value) && $user->uid!=$value) {
    $sameUser = false;
  }

  $visibility_opts_form = backdrop_get_form('tawk_to_visibility_opts_form');

  return theme('tawk_to_admin_page', array(
    'base_url' => tawk_to_get_base_url(),
    'iframe_url' => tawk_to_get_iframe_url(),
    'widget' => tawk_to_get_widget(),
    'sameUser' => $sameUser,
    'visibility_opts_form' => render($visibility_opts_form),
  ));
}

/**
 * Implements module theme hook for templates usage.
 */
function tawk_to_theme() {
  return array(
    'tawk_to_admin_page' => array(
      'variables' => array('title' => NULL),
      'template' => 'admin',
      'path' => backdrop_get_path('module', 'tawk_to') . '/templates',
    )
  );
}

/**
* Constructs url for configuration iframe.
*/
function tawk_to_get_iframe_url() {
  $widget = tawk_to_get_widget();

  if (!$widget) {
    $widget = array(
      'page_id'   => '',
      'widget_id' => '',
    );
  }
  return tawk_to_get_base_url() . '/generic/widgets?currentWidgetId=' . $widget['widget_id'] . '&currentPageId=' . $widget['page_id'];
}

/**
* Base url for tawk.to application which serves iframe.
*/
function tawk_to_get_base_url() {
  return 'https://plugins.tawk.to';
}

/**
* Ajax endpoint which is used to set selected widget details.
*/
function tawk_to_set_widget() {
  if (!isset($_POST['pageId']) || !isset($_POST['widgetId'])) {
    return backdrop_json_output(array('success' => false));
  }

  if (preg_match('/^[0-9A-Fa-f]{24}$/', $_POST['pageId']) !== 1 || preg_match('/^[a-z0-9]{1,50}$/i', $_POST['widgetId']) !== 1) {
    return backdrop_json_output(array('success' => false));
  }

  config_set(TAWK_TO_CONFIG_NAME, TAWK_TO_PAGE_ID, $_POST['pageId']);
  config_set(TAWK_TO_CONFIG_NAME, TAWK_TO_WIDGET_ID, $_POST['widgetId']);

  global $user;
  if ($user->uid) {
    config_set(TAWK_TO_CONFIG_NAME, TAWK_TO_WIDGET_USER_ID, $user->uid);
  }

  // Flush page cache so widget will appear at next page load
  cache_flush('page');

  backdrop_json_output(array('success' => true));
}

/**
* Ajax endpoint which is used to remove currently selected widget details.
*/
function tawk_to_remove_widget($a = 0, $b = 0) {
  $config = config(TAWK_TO_CONFIG_NAME);
  $config->clear(TAWK_TO_PAGE_ID);
  $config->clear(TAWK_TO_WIDGET_ID);
  $config->save();

  // Flush page cache so widget will disappear at next page load
  cache_flush('page');

  backdrop_json_output(array('success' => true));
}
